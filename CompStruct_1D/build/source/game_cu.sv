/*
    This file was generated automatically by Alchitry Labs 2.0.24-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module game_cu (
        input wire clk,
        input wire rst,
        input wire slow_clk,
        input wire [31:0] regfile_rd2,
        input wire p0b0,
        input wire p0b1,
        input wire p1b0,
        input wire p1b1,
        input wire p0wall,
        input wire p1wall,
        input wire center_button,
        output reg [5:0] alufn,
        output reg [2:0] asel,
        output reg [2:0] bsel,
        output reg [1:0] alu_out_sel,
        output reg [3:0] regfile_wa,
        output reg [3:0] regfile_ra1,
        output reg [3:0] regfile_ra2,
        output reg regfile_we
    );
    localparam E_GameStates_IDLE = 6'h0;
    localparam E_GameStates_P0B0_UPDATE_MOTOR = 6'h1;
    localparam E_GameStates_P0B1_UPDATE_MOTOR = 6'h2;
    localparam E_GameStates_P1B0_UPDATE_MOTOR = 6'h3;
    localparam E_GameStates_P1B1_UPDATE_MOTOR = 6'h4;
    localparam E_GameStates_CHECK_MOTOR_SPEED = 6'h5;
    localparam E_GameStates_BRANCH_MOTOR_SPEED = 6'h6;
    localparam E_GameStates_FIX_MAX_MOTOR_SPEED = 6'h7;
    localparam E_GameStates_INCREASE_MOTOR_SPEED = 6'h8;
    localparam E_GameStates_P0_INCREASE_SCORE = 6'h9;
    localparam E_GameStates_P0_CHECK_SCORE = 6'ha;
    localparam E_GameStates_P0_WALL_BRANCH = 6'hb;
    localparam E_GameStates_P0_WIN = 6'hc;
    localparam E_GameStates_P0_HAVENT_WIN = 6'hd;
    localparam E_GameStates_P1_INCREASE_SCORE = 6'he;
    localparam E_GameStates_P1_CHECK_SCORE = 6'hf;
    localparam E_GameStates_P1_WALL_BRANCH = 6'h10;
    localparam E_GameStates_P1_WIN = 6'h11;
    localparam E_GameStates_P1_HAVENT_WIN = 6'h12;
    localparam E_GameStates_GAMEOVER = 6'h13;
    localparam E_GameStates_RESET_COUNTER_GAMEOVER = 6'h14;
    localparam E_GameStates_INCREASE_COUNTER_GAMEOVER = 6'h15;
    localparam E_GameStates_WAIT_FOR_EDGE_LOW_GAMEOVER = 6'h16;
    localparam E_GameStates_CHECK_COUNTER_GAMEOVER = 6'h17;
    localparam E_GameStates_BRANCH_COUNTER_GAMEOVER = 6'h18;
    localparam E_GameStates_RESET_P0_SCORE = 6'h19;
    localparam E_GameStates_RESET_P1_SCORE = 6'h1a;
    localparam E_GameStates_REVERSE_MOTOR = 6'h1b;
    localparam E_GameStates_SET_LOWEST_SPEED = 6'h1c;
    localparam E_GameStates_WAIT_CENTER_BUTTON_PRESS = 6'h1d;
    localparam E_GameStates_START = 6'h1e;
    localparam E_GameStates_OFF_BUTTON_LED = 6'h1f;
    localparam E_GameStates_RESET_COUNTER = 6'h20;
    localparam E_GameStates_SET_MAX_COUNTER = 6'h21;
    localparam E_GameStates_INCREASE_COUNTER = 6'h22;
    localparam E_GameStates_WAIT_FOR_EDGE_LOW = 6'h23;
    localparam E_GameStates_CHECK_COUNTER = 6'h24;
    localparam E_GameStates_BRANCH_COUNTER = 6'h25;
    localparam E_GameStates_SET_CORRECT_BUTTON = 6'h26;
    localparam E_GameStates_BRANCH_CORRECT_BUTTON = 6'h27;
    localparam E_GameStates_SET_0_CORRECT_BUTTON = 6'h28;
    localparam E_GameStates_SET_1_CORRECT_BUTTON = 6'h29;
    logic [5:0] D_game_fsm_d, D_game_fsm_q = 6'h1e;
    always @* begin
        D_game_fsm_d = D_game_fsm_q;
        
        alufn = 1'h0;
        asel = 1'h0;
        bsel = 1'h0;
        alu_out_sel = 1'h0;
        regfile_we = 1'h0;
        regfile_wa = 1'h0;
        regfile_ra1 = 1'h0;
        regfile_ra2 = 1'h0;
        if (rst) begin
            D_game_fsm_d = 6'h0;
        end else begin
            
            case (D_game_fsm_q)
                6'h0: begin
                    alufn = 1'h0;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h0;
                    regfile_wa = 1'h0;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    if (p0b0) begin
                        D_game_fsm_d = 6'h1;
                    end
                    if (p0b1) begin
                        D_game_fsm_d = 6'h2;
                    end
                    if (p1b0) begin
                        D_game_fsm_d = 6'h3;
                    end
                    if (p1b1) begin
                        D_game_fsm_d = 6'h4;
                    end
                    if (p0wall) begin
                        D_game_fsm_d = 6'h9;
                    end
                    if (p1wall) begin
                        D_game_fsm_d = 6'he;
                    end
                end
                6'h1: begin
                    alufn = 6'h38;
                    asel = 3'h4;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 1'h1;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 3'h5;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h5;
                end
                6'h2: begin
                    alufn = 6'h38;
                    asel = 2'h3;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 1'h1;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 3'h5;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h5;
                end
                6'h3: begin
                    alufn = 6'h39;
                    asel = 2'h2;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 1'h1;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 3'h5;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h5;
                end
                6'h4: begin
                    alufn = 6'h39;
                    asel = 1'h1;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 1'h1;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 3'h5;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h5;
                end
                6'h5: begin
                    alufn = 6'h37;
                    asel = 3'h4;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h7;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 2'h2;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h6;
                end
                6'h6: begin
                    alufn = 6'h0;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h0;
                    regfile_wa = 1'h0;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 3'h7;
                    alu_out_sel = 1'h0;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h7;
                    end else begin
                        D_game_fsm_d = 6'h8;
                    end
                end
                6'h8: begin
                    alufn = 6'h0;
                    asel = 1'h1;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 2'h2;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 2'h2;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h1f;
                end
                6'h7: begin
                    alufn = 6'h1a;
                    asel = 3'h4;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 2'h2;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 2'h2;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h1f;
                end
                6'h1e: begin
                    alufn = 6'h1b;
                    asel = 1'h0;
                    bsel = 3'h4;
                    regfile_we = 1'h1;
                    regfile_wa = 2'h2;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h1f;
                end
                6'h1f: begin
                    alufn = 6'h1b;
                    asel = 1'h0;
                    bsel = 3'h4;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h5;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h20;
                end
                6'h20: begin
                    alufn = 6'h1b;
                    asel = 1'h0;
                    bsel = 3'h4;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h6;
                    regfile_ra1 = 3'h6;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h21;
                end
                6'h21: begin
                    alufn = 6'h3a;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h7;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 2'h2;
                    D_game_fsm_d = 6'h22;
                end
                6'h22: begin
                    alufn = 6'h0;
                    asel = 1'h1;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h6;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 3'h6;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h23;
                end
                6'h23: begin
                    if (~slow_clk) begin
                        D_game_fsm_d = 6'h24;
                    end else begin
                        D_game_fsm_d = 6'h23;
                    end
                end
                6'h24: begin
                    alufn = 6'h35;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 4'h8;
                    regfile_ra1 = 3'h6;
                    regfile_ra2 = 3'h7;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h25;
                end
                6'h25: begin
                    alufn = 6'h0;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h0;
                    regfile_wa = 1'h0;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 4'h8;
                    alu_out_sel = 1'h0;
                    if (~regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h26;
                    end else begin
                        if (slow_clk) begin
                            D_game_fsm_d = 6'h22;
                        end else begin
                            D_game_fsm_d = 6'h25;
                        end
                    end
                end
                6'h26: begin
                    alufn = 6'h0;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 1'h0;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h1;
                    D_game_fsm_d = 6'h27;
                end
                6'h27: begin
                    alufn = 6'h0;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h0;
                    regfile_wa = 1'h0;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    if (~regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h28;
                    end else begin
                        D_game_fsm_d = 6'h29;
                    end
                end
                6'h28: begin
                    alufn = 6'h1b;
                    asel = 1'h0;
                    bsel = 1'h1;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h5;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h0;
                end
                6'h29: begin
                    alufn = 6'h1b;
                    asel = 1'h0;
                    bsel = 2'h2;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h5;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h0;
                end
                6'h9: begin
                    alufn = 6'h0;
                    asel = 1'h1;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 2'h3;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 2'h3;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'ha;
                end
                6'ha: begin
                    alufn = 6'h35;
                    asel = 1'h0;
                    bsel = 2'h3;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h7;
                    regfile_ra1 = 2'h3;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'hb;
                end
                6'hb: begin
                    alufn = 6'h0;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h0;
                    regfile_wa = 1'h0;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 3'h7;
                    alu_out_sel = 1'h0;
                    if (~regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'hc;
                    end else begin
                        D_game_fsm_d = 6'hd;
                    end
                end
                6'hc: begin
                    alufn = 6'h0;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h0;
                    regfile_wa = 1'h0;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h13;
                end
                6'hd: begin
                    alufn = 6'h0;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h0;
                    regfile_wa = 1'h0;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h1b;
                end
                6'he: begin
                    alufn = 6'h0;
                    asel = 1'h1;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h4;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 3'h4;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'hf;
                end
                6'hf: begin
                    alufn = 6'h35;
                    asel = 1'h0;
                    bsel = 2'h3;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h7;
                    regfile_ra1 = 3'h4;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h10;
                end
                6'h10: begin
                    alufn = 6'h0;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h0;
                    regfile_wa = 1'h0;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 3'h7;
                    alu_out_sel = 1'h0;
                    if (~regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h11;
                    end else begin
                        D_game_fsm_d = 6'h12;
                    end
                end
                6'h11: begin
                    alufn = 6'h0;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h0;
                    regfile_wa = 1'h0;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h13;
                end
                6'h12: begin
                    alufn = 6'h0;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h0;
                    regfile_wa = 1'h0;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h1b;
                end
                6'h13: begin
                    alufn = 6'h0;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h0;
                    regfile_wa = 1'h0;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h14;
                end
                6'h14: begin
                    alufn = 6'h1b;
                    asel = 1'h0;
                    bsel = 3'h4;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h6;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h15;
                end
                6'h15: begin
                    alufn = 6'h0;
                    asel = 1'h1;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h6;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 3'h6;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h16;
                end
                6'h16: begin
                    if (~slow_clk) begin
                        D_game_fsm_d = 6'h24;
                    end else begin
                        D_game_fsm_d = 6'h16;
                    end
                end
                6'h17: begin
                    alufn = 6'h35;
                    asel = 1'h0;
                    bsel = 3'h5;
                    regfile_we = 1'h1;
                    regfile_wa = 4'h8;
                    regfile_ra1 = 3'h6;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h18;
                end
                6'h18: begin
                    alufn = 6'h0;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h0;
                    regfile_wa = 1'h0;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 4'h8;
                    alu_out_sel = 1'h0;
                    if (~regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h19;
                    end else begin
                        if (slow_clk) begin
                            D_game_fsm_d = 6'h15;
                        end else begin
                            D_game_fsm_d = 6'h18;
                        end
                    end
                end
                6'h19: begin
                    alufn = 6'h1b;
                    asel = 1'h0;
                    bsel = 3'h4;
                    regfile_we = 1'h1;
                    regfile_wa = 2'h3;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h1a;
                end
                6'h1a: begin
                    alufn = 6'h1b;
                    asel = 1'h0;
                    bsel = 3'h4;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h4;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h1b;
                end
                6'h1b: begin
                    alufn = 6'h16;
                    asel = 1'h1;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 1'h1;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h1;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h1c;
                end
                6'h1c: begin
                    alufn = 6'h1a;
                    asel = 1'h1;
                    bsel = 1'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 2'h2;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    D_game_fsm_d = 6'h1d;
                end
                6'h1d: begin
                    alufn = 6'h0;
                    asel = 1'h0;
                    bsel = 1'h0;
                    regfile_we = 1'h0;
                    regfile_wa = 1'h0;
                    regfile_ra1 = 1'h0;
                    regfile_ra2 = 1'h0;
                    alu_out_sel = 1'h0;
                    if (center_button) begin
                        D_game_fsm_d = 6'h1e;
                    end
                end
            endcase
        end
    end
    
    
    always @(posedge (clk)) begin
        if ((rst) == 1'b1) begin
            D_game_fsm_q <= 6'h1e;
        end else begin
            D_game_fsm_q <= D_game_fsm_d;
        end
    end
endmodule