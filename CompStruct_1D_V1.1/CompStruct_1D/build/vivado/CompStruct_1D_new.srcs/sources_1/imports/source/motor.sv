/*
    This file was generated automatically by Alchitry Labs 2.0.24-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module motor (
        input wire clk,
        input wire rst,
        input wire [3:0] motor_speed,
        input wire motor_direction,
        output reg in1,
        output reg in2
    );
    localparam _MP_WIDTH_1789247434 = 4'ha;
    localparam _MP_TOP_1789247434 = 8'hfa;
    localparam _MP_DIV_1789247434 = 2'h3;
    logic [9:0] M_pwm_value;
    logic M_pwm_pulse;
    
    pwm #(
        .WIDTH(_MP_WIDTH_1789247434),
        .TOP(_MP_TOP_1789247434),
        .DIV(_MP_DIV_1789247434)
    ) pwm (
        .update(1'h1),
        .clk(clk),
        .rst(rst),
        .value(M_pwm_value),
        .pulse(M_pwm_pulse)
    );
    
    
    always @* begin
        in1 = 1'h0;
        in2 = 1'h0;
        
        case (motor_speed)
            3'h0: begin
                M_pwm_value = 1'h0;
            end
            3'h1: begin
                M_pwm_value = 7'h64;
            end
            3'h2: begin
                M_pwm_value = 7'h78;
            end
            3'h3: begin
                M_pwm_value = 8'h8c;
            end
            3'h4: begin
                M_pwm_value = 8'ha0;
            end
            3'h5: begin
                M_pwm_value = 8'haa;
            end
            3'h6: begin
                M_pwm_value = 8'hb4;
            end
            3'h7: begin
                M_pwm_value = 8'hbe;
            end
            default: begin
                M_pwm_value = 8'hbe;
            end
        endcase
        if (motor_direction == 1'h1) begin
            in1 = M_pwm_pulse;
            in2 = 1'h0;
        end
        if (motor_direction == 1'h0) begin
            in1 = 1'h0;
            in2 = M_pwm_pulse;
        end
    end
    
    
endmodule