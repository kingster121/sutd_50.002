testbench test_shifter {
    sig clk

    fun tick_clock() {
        clk = 1
        $silent_tick() // tick without capturing signals
        clk = 0
        $tick()
    }
    
    shifter shiftL(#SIZE(32))
    // shifter shiftR(#SIZE(32))
    shifter shiftR_sign(#SIZE(32))

    test myTest {
        clk = 0 // initialize the value
        $tick() // capture initial state

        // Shift left 17 bits
        shiftL.a = 32hffffffff
        shiftL.b = 5b10001 // shift by 17 bits
        shiftL.alufn_signal = 6b000000 // left shift
        $print(shiftL.shift)
        
        // Shift right 17 bits
        // shiftR.a = 32hffffffff
        // shiftR.b = 5b10001 // shift by 16 bits
        // shiftR.alufn_signal = 6b000001 // right shift
        // $print(shiftR.shift)
        
        // Shift right by 17 with sign extension
        shiftR_sign.a = 32hf0ffffff
        shiftR_sign.b = 5b10001 // shift by 17 bits
        shiftR_sign.alufn_signal = 6b000011 // right shift with sign extension
        $print(shiftR_sign.shift)
    }
}