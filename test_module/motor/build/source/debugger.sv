/*
    This file was generated automatically by Alchitry Labs 2.0.24-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module debugger (
        input wire clk,
        input wire rst,
        input wire new_rx,
        input wire [7:0] rx_data,
        output reg new_tx,
        output reg [7:0] tx_data,
        input wire tx_busy,
        input wire [31:0] motor_speed
    );
    localparam BIT_1 = 8'h31;
    localparam BIT_0 = 8'h30;
    logic [31:0] D_bit_32_count_d, D_bit_32_count_q = 1'h0;
    logic [2:0] D_motor_speed_dff_d, D_motor_speed_dff_q = 0;
    logic send_trigger;
    always @* begin
        D_motor_speed_dff_d = D_motor_speed_dff_q;
        D_bit_32_count_d = D_bit_32_count_q;
        
        new_tx = 1'h0;
        tx_data = 8'bxxxxxxxx;
        send_trigger = new_rx & (rx_data == 8'h68);
        if (send_trigger) begin
            D_motor_speed_dff_d = motor_speed;
        end
        if (!tx_busy) begin
            D_bit_32_count_d = D_bit_32_count_q - 1'h1;
            new_tx = 1'h1;
            if (D_motor_speed_dff_q[D_bit_32_count_q] == 1'h1) begin
                tx_data = 8'h31;
            end else begin
                tx_data = 8'h30;
            end
            if (D_bit_32_count_q == 1'h0) begin
                D_bit_32_count_d = 5'h1f;
            end
        end
    end
    
    
    always @(posedge (clk)) begin
        if ((rst) == 1'b1) begin
            D_bit_32_count_q <= 1'h0;
            D_motor_speed_dff_q <= 0;
        end else begin
            D_bit_32_count_q <= D_bit_32_count_d;
            D_motor_speed_dff_q <= D_motor_speed_dff_d;
        end
    end
endmodule