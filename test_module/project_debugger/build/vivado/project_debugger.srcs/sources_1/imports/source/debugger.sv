/*
    This file was generated automatically by Alchitry Labs 2.0.24-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module debugger (
        input wire clk,
        input wire rst,
        input wire new_rx,
        input wire [7:0] rx_data,
        output reg new_tx,
        output reg [7:0] tx_data,
        input wire tx_busy,
        input wire [31:0] correct_button
    );
    localparam E_States_IDLE = 2'h0;
    localparam E_States_LOAD_DFF = 2'h1;
    localparam E_States_SEND_CORRECT_BUTTON_PREFIX = 2'h2;
    localparam E_States_SEND_CORRECT_BUTTON = 2'h3;
    localparam logic [16:0][7:0] TEXT_CORRECT_BUTTON = {{8'h20, 8'h3a, 8'h6e, 8'h6f, 8'h74, 8'h74, 8'h75, 8'h42, 8'h20, 8'h74, 8'h63, 8'h65, 8'h72, 8'h72, 8'h6f, 8'h43, 8'ha}};
    localparam BIT_0 = 8'h30;
    localparam BIT_1 = 8'h31;
    logic [1:0] D_state_d, D_state_q = 2'h0;
    logic [5:0] D_bit_32_count_d, D_bit_32_count_q = 1'h0;
    logic [4:0] D_correct_button_count_d, D_correct_button_count_q = 0;
    logic [31:0] D_correct_button_dff_d, D_correct_button_dff_q = 1'h0;
    logic send_trigger;
    always @* begin
        D_bit_32_count_d = D_bit_32_count_q;
        D_correct_button_count_d = D_correct_button_count_q;
        D_state_d = D_state_q;
        D_correct_button_dff_d = D_correct_button_dff_q;
        
        new_tx = 1'h0;
        tx_data = 8'bxxxxxxxx;
        send_trigger = new_rx & (rx_data == 8'h68);
        
        case (D_state_q)
            2'h0: begin
                if (send_trigger & !tx_busy) begin
                    D_bit_32_count_d = 1'h0;
                    D_correct_button_count_d = 1'h0;
                    D_state_d = 2'h1;
                end
            end
            2'h1: begin
                D_correct_button_dff_d = correct_button;
                D_state_d = 2'h2;
            end
            2'h2: begin
                if (!tx_busy) begin
                    D_correct_button_count_d = D_correct_button_count_q + 1'h1;
                    new_tx = 1'h1;
                    tx_data = TEXT_CORRECT_BUTTON[D_correct_button_count_q];
                    if (D_correct_button_count_q == 6'h10) begin
                        D_state_d = 2'h3;
                    end
                end
            end
            2'h3: begin
                if (!tx_busy) begin
                    D_bit_32_count_d = D_bit_32_count_q + 1'h1;
                    new_tx = 1'h1;
                    if (D_correct_button_dff_q[D_bit_32_count_q] == 1'h1) begin
                        tx_data = 8'h31;
                    end else begin
                        tx_data = 8'h30;
                    end
                    if (D_bit_32_count_q == 5'h1f) begin
                        D_bit_32_count_d = 1'h0;
                        D_state_d = 2'h0;
                    end
                end
            end
            default: begin
                D_state_d = 2'h0;
            end
        endcase
    end
    
    
    always @(posedge (clk)) begin
        if ((rst) == 1'b1) begin
            D_state_q <= 2'h0;
            D_bit_32_count_q <= 1'h0;
            D_correct_button_count_q <= 0;
            D_correct_button_dff_q <= 1'h0;
        end else begin
            D_state_q <= D_state_d;
            D_bit_32_count_q <= D_bit_32_count_d;
            D_correct_button_count_q <= D_correct_button_count_d;
            D_correct_button_dff_q <= D_correct_button_dff_d;
        end
    end
endmodule